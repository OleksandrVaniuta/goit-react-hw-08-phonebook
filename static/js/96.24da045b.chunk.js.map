{"version":3,"file":"static/js/96.24da045b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactsItem/ContactsItem.module.css?8722","components/loader.js","redux/selectors.js","webpack://react-homework-template/./src/components/ContactsList/ContactList.module.css?ae34","components/ContactsItem/ContatsItem.jsx","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/pages/pagesStyle/Contacts.module.css?6a09","pages/Сontacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactsItem_item__pedOi\",\"contact\":\"ContactsItem_contact__3h39i\",\"button\":\"ContactsItem_button__uPo7U\",\"button_icon\":\"ContactsItem_button_icon__w6y7Y\",\"Loader\":\"ContactsItem_Loader__LAZ3W\",\"trashIcon\":\"ContactsItem_trashIcon__WbFna\",\"call\":\"ContactsItem_call__GhVeh\"};","import { Oval } from 'react-loader-spinner';\nimport css from '../components/ContactsItem/ContactsItem.module.css';\n\nfunction Loader() {\n  return (\n    <div className={css.Loader}>\n      <Oval\n        height={25}\n        width={25}\n        color=\"#4fa94d\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#4fa94d\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </div>\n  );\n}\n\nexport default Loader;\n","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectFiltredContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  const normalizeFilter = filter.toLocaleLowerCase();\n  if (filter === ' ') {\n    return contacts;\n  }\n  return contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizeFilter)\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__3daws\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operation';\n// import { FaRegTrashAlt } from 'react-icons/fa';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport css from './ContactsItem.module.css';\n\nfunction ContactsItem({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const telNum = `tel:+${{ number }}`;\n  return (\n    <li key={id} className={css.item}>\n      <p className={css.contact}>\n        {name}: {number}\n      </p>\n      {/* <button\n        type=\"button\"\n        onClick={e => {\n          dispatch(deleteContact(id));\n          e.target.textContent = 'deteling....';\n        }}\n        className={css.button}\n      >\n        delete\n      </button> */}\n      <div>\n        <a href={telNum} className={css.contactsLink}>\n          <PhoneIcon className={css.call} />\n        </a>\n        <DeleteIcon\n          onClick={() => {\n            dispatch(deleteContact(id));\n          }}\n          className={css.trashIcon}\n        />\n      </div>\n    </li>\n  );\n}\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactsItem;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operation';\nimport Loader from 'components/loader';\nimport {\n  selectIsLoading,\n  selectError,\n  selectContacts,\n  selectFiltredContacts,\n} from 'redux/selectors';\n\nimport css from './ContactList.module.css';\nimport ContactsItem from 'components/ContactsItem/ContatsItem';\n\nfunction ContactsList() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  const visibleEl = useSelector(selectFiltredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={css.list}>\n      {isLoading && !error && <Loader />}\n      {error && <b>{error}</b>}\n      {contacts.length > 0 &&\n        visibleEl.map(({ id, name, number }) => {\n          return <ContactsItem key={id} id={id} name={name} number={number} />;\n        })}\n    </ul>\n  );\n}\n\nexport default ContactsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterEl\":\"Filter_filterEl__0vD7t\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { addFilter } from 'redux/filterSlicer';\nimport { useDispatch } from 'react-redux';\n\nimport css from './Filter.module.css';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  return (\n    <label className={css.filterEl}>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find contacts by name\"\n        onChange={e => dispatch(addFilter(e.currentTarget.value))}\n        className={css.filterInput}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"contactName\":\"ContactForm_contactName__jsNJQ\",\"contactTel\":\"ContactForm_contactTel__+jwRv\",\"contactNameInput\":\"ContactForm_contactNameInput__E1NtV\",\"contactTelInput\":\"ContactForm_contactTelInput__tOlVB\",\"createBtn\":\"ContactForm_createBtn__L0Zd-\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operation';\nimport { selectContacts } from 'redux/selectors';\n\n// import { nanoid } from 'nanoid';\nimport css from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const stateContacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const onclone = stateContacts.find(contact => contact.name === name);\n\n    const contact = {\n      name: name,\n      number: number,\n    };\n\n    if (onclone) {\n      alert(`${contact.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact(contact));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label className={css.contactName}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={e => setName(e.currentTarget.value)}\n          className={css.contactNameInput}\n        />\n      </label>\n      <label className={css.contactTel}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={e => setNumber(e.currentTarget.value)}\n          className={css.contactTelInput}\n        />\n      </label>\n      <button type=\"submit\" className={css.createBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactBox\":\"Contacts_contactBox__mjjBx\",\"contactTitle\":\"Contacts_contactTitle__nTKBS\"};","// import css from './App.module.css';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport css from './pagesStyle/Contacts.module.css';\n\nexport default function ContactMain() {\n  return (\n    <div className={css.contactBox}>\n      <ContactForm />\n      <h2 className={css.contactTitle}>Your contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n}\n"],"names":["className","css","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFiltredContacts","filter","selectFilter","normalizeFilter","toLocaleLowerCase","contact","name","includes","id","number","dispatch","useDispatch","telNum","href","Phone","Delete","onClick","deleteContact","useSelector","visibleEl","useEffect","fetchContacts","length","map","type","placeholder","onChange","e","addFilter","currentTarget","value","ContactForm","stateContacts","useState","setName","setNumber","resetForm","onSubmit","preventDefault","onclone","find","alert","addContact","pattern","title","required","ContactMain"],"sourceRoot":""}